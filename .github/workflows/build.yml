name: build

on:
    push:
    schedule:
        -   cron: '0 12 * * 0'

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php: [ '7.1', '7.4' ]
                symfony: [ '^2.7', '^3', '^4', '^5' ]
                composer: [ '--prefer-lowest', '' ]
                exclude:
                    -   php: '7.1'
                        symfony: '^5'
                    -   php: '7.4'
                        symfony: '^2.7'
        steps:
            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions: dom, json, mbstring, libxml
                    coverage: xdebug

            -   name: Git checkout
                uses: actions/checkout@v2

            -   name: Validate composer.json and composer.lock
                run: composer validate

            -   name: Require Symfony dependencies
                run: composer require --no-update symfony/config:${{ matrix.symfony }} symfony/dependency-injection:${{ matrix.symfony }} symfony/http-kernel:${{ matrix.symfony }} symfony/yaml:${{ matrix.symfony }}

            -   name: Prepare Composer cache vars
                id: composer
                run: |
                    echo "::set-output name=cache_dir::$(composer config cache-files-dir)"
                    echo "::set-output name=cache_key::$(date +'%Y-%m-%d')-${{ runner.os }}-${{ matrix.php }}-${{ matrix.symfony }}${{ matrix.composer }}-composer-"

            -   name: Cache Composer dependencies
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer.outputs.cache_dir }}
                    key: ${{ steps.composer.outputs.cache_key }}${{ hashFiles('**/composer.json') }}
                    restore-keys: ${{ steps.composer.outputs.cache_key }}

            -   name: Update Composer dependencies
                run: composer update ${{ matrix.composer }} --prefer-dist --no-progress --no-suggest --no-interaction

            -   name: Run PHP Code Sniffer
                run: composer run-script test:phpcs
                if: success()

            -   name: Run PHPStan
                run: composer run-script test:phpstan
                if: success() || failure()

            -   name: Run PHPUnit with coverage
                run: composer run-script test:phpunit-coverage
                if: success() || failure()

            -   name: Run Covelyzer
                run: composer run-script test:covelyzer
                if: success() || failure()

    # Separate build, as not all the tools works on PHP8 for now
    build-php8:
        runs-on: ubuntu-latest
        steps:
            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.0'
                    extensions: dom, json, mbstring, libxml
                    coverage: xdebug

            -   name: Git checkout
                uses: actions/checkout@v2

            -   name: Validate composer.json and composer.lock
                run: composer validate

            -   name: Require Symfony dependencies
                run: composer require --no-update symfony/config:^5 symfony/dependency-injection:^5 symfony/http-kernel:^5 symfony/yaml:^5

            -   name: Prepare Composer cache vars
                id: composer
                run: |
                    echo "::set-output name=cache_dir::$(composer config cache-files-dir)"
                    echo "::set-output name=cache_key::$(date +'%Y-%m-%d')-${{ runner.os }}-8.0-composer-"

            -   name: Cache Composer dependencies
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer.outputs.cache_dir }}
                    key: ${{ steps.composer.outputs.cache_key }}${{ hashFiles('**/composer.json') }}
                    restore-keys: ${{ steps.composer.outputs.cache_key }}

            -   name: Update Composer dependencies (ignore platform requirements)
                run: composer update --prefer-dist --no-progress --no-suggest --no-interaction --ignore-platform-reqs

            -   name: Run PHP Code Sniffer
                run: composer run-script test:phpcs
                if: success()

            -   name: Run PHPStan
                run: composer run-script test:phpstan
                if: success() || failure()

            -   name: Run PHPUnit (no coverage)
                run: composer run-script test:phpunit
                if: success() || failure()
